#!/bin/bash
# Copyright (C) 2011 Ion Torrent Systems, Inc. All Rights Reserved
#
#	Finds the latest version of each package and copies it to beta repo
#
#	Assumes all the relevant users, servers, directories already exist.

# Set the DEBUG flag to 1 to test the script without actually making changes
DEBUG=0


# note:  package names are case sensitive!!
pkglist=(
    ion-alignment
    ion-analysis
    ion-dbreports
    ion-gpu
    ion-docs
    ion-onetouchupdater
    ion-pipeline
    ion-pgmupdates
    ion-plugins 
    ion-protonupdates
    ion-publishers
    ion-referencelibrary
    ion-rsmts
    ion-torrentr
    ion-torrentscout-light
    ion-tsconfig
    samtools
    tmap
    bedtools
    gridengine-client
    gridengine-common
    gridengine-exec
    gridengine-master
    gridengine-qmon 
    ion-samita
    ion-sampledata
    ion-tsups
    ion-usbmount
    libbam-dev
    libdrmaa-dev
    libdrmaa-java
    libdrmaa1.0
    libsam-java
    python-amqplib
    python-anyjson
    python-calabash
    python-celery
    python-dateutil
    python-django-celery
    python-django-doc
    python-django-kombu
    python-django-picklefield
    python-django-south
    python-django-tastypie
    python-django
    python-drmaa
    python-importlib
    python-jsonpipe
    python-kombu
    python-mimeparse
    python-ordereddict
    python-pysam
    python-simplejson
    python-tastypie
    python-endless-pagination
    zeroinstall-injector
    r-cran-mgcv 
    r-cran-mass
    r-cran-rpart 
    r-cran-kernsmooth 
    r-cran-boot
    r-base
    r-doc-html 
    r-base-html
    r-base-dev
    r-recommended 
    r-base-core	 
    r-cran-nlme 
    r-cran-foreign
    r-cran-survival
    r-cran-matrix
    r-cran-lattice
    r-cran-cluster
    r-cran-spatial
    r-cran-nnet
    r-cran-codetools
    r-cran-class
    r-cran-bitops
    r-cran-catools
    nxclient
    nxnode
    nxserver
    ion-igv
    ion-jk
    libapache2-mod-wsgi
    )
srcdir="lucid-proton-alpha"
dstdir="lucid-alpha"
remoteuser="ion"
remoteserver="rnd1.ite"
rootdir="public_html/updates_server_root/updates/software"
srcpath=${rootdir}/${srcdir}
dstpath=${rootdir}/${dstdir}

echo -e "Package Promotion\tFrom $srcdir To $dstdir"

for pkgname in ${pkglist[@]}; do
    #---------------------------------------------
    # Find newest package version
    #---------------------------------------------
    filename=$(\
    ssh -l $remoteuser $remoteserver \
    	"ls -1tr ${srcpath}/$pkgname* 2>/dev/null|tail -1"
    )
    if [ "$filename" == "" ]; then
    	echo "WARNING: $pkgname has no candidate file to promote."
        continue
    fi
    
    #---------------------------------------------
    # Copy selected package
    #---------------------------------------------
    if [ $DEBUG -eq 0 ]; then
        ssh -l $remoteuser $remoteserver \
    	    "cp -vp $filename ${dstpath}/"
        copied=$(\
        ssh -l $remoteuser $remoteserver \
        	"ls -1 ${dstpath}/$filename 2>/dev/null|tail -1"
        )
        if [ "copied" != "" ]; then
        	echo "$pkgname promoted"
        else
        	echo "ERROR: $pkgname was not promoted!"
        fi
    else
        ssh -l $remoteuser $remoteserver \
    	    "ls -1tr ${srcpath}/$pkgname* 2>/dev/null|tail -1"
        echo "$pkgname promoted"
    fi
    echo
done

#------------------------------------------
# Update the Packages.gz file
#------------------------------------------
echo "Writing new $rootdir/Packages.gz file"
if [ $DEBUG -eq 0 ]; then
    ssh $remoteuser@$remoteserver \
    	"cd $rootdir && rm -f $dstdir/Packages.gz && apt-ftparchive packages $dstdir | gzip > $dstdir/Packages.gz"
    if [ $? -ne 0 ]
    then
	    echo "There was an error creating the Packages.gz file"
	    exit 1
    fi
else
	echo "Packages.gz not written in debug mode."
fi
exit 0
