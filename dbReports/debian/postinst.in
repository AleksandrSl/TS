#!/bin/bash
# Copyright (C) 2010 Ion Torrent Systems, Inc. All Rights Reserved
set -e
#set -x
#echo "preinst $@"
SETTINGS=@ION_INSTALL_PREFIX@/iondb/settings.py

case "$1" in
    configure)

    chmod ugo+x @ION_INSTALL_PREFIX@/iondb/bin/*
    chmod ugo+x @ION_INSTALL_PREFIX@/iondb/manage.py

    #remove OneTouch update temp files
	if [ -e /tmp/OTstatus ]; then
        rm /tmp/OTstatus
    fi
	if [ -e /tmp/OTlock ]; then
        rm /tmp/OTlock
    fi

    # Install Settings file
    if [ -e "$SETTINGS" ]; then
        echo "Making back-up of existing Ion Django settings file '$SETTINGS' as '$SETTINGS.backup'."
        mv $SETTINGS $SETTINGS.backup
    fi
    cp $SETTINGS.dist $SETTINGS
	
    #---											---#
    #---	Genome Directories Permissions, etc.	---#
    #---	head node only; /results shared out		---#
    #---											---#
    #will this always be results?
    mkdir -p /results/referenceLibrary/temp
    mkdir -p /results/referenceLibrary/tmap-f1
    mkdir -p /results/referenceLibrary/tmap-f2
    mkdir -p /results/referenceLibrary/tmap-f3
    mkdir -p /results/referenceLibrary/disabled/tmap-f1
    mkdir -p /results/referenceLibrary/disabled/tmap-f2
    mkdir -p /results/referenceLibrary/disabled/tmap-f3
    chmod -R 777 /results/referenceLibrary/temp
    chmod -R 777 /results/referenceLibrary/tmap-f1
    chmod -R 777 /results/referenceLibrary/tmap-f2
    chmod -R 777 /results/referenceLibrary/tmap-f3
    chmod -R 777 /results/referenceLibrary/disabled
    #make pluginMedia dir
    mkdir -p /results/pluginMedia
    chmod -R 777 /results/pluginMedia

    #	------------------------------------------
    #	Replace existing httpd.conf
    #	------------------------------------------
    # If exists and non-empty, use numbered backups - old.1, old.2, ...
    if [ -s /etc/apache2/httpd.conf ]; then
        mv -v --backup=numbered /etc/apache2/httpd.conf /etc/apache2/httpd.conf.old
    fi
    # Default Ubuntu file is empty. Config now in /etc/apache2/conf.d/
    touch /etc/apache2/httpd.conf

    # Enable mod_wsgi
    /usr/sbin/a2enmod wsgi

    # Switch to the torrent-server apache vhost
    /usr/sbin/a2dissite default
    /usr/sbin/a2ensite torrent-server
    # apache2 restarted by invoke-rc.d command below

    #	------------------------------------------
    #	Additional apache2 related configurations
    #	------------------------------------------
    mkdir -p /results/analysis/output
    mkdir -p /results/analysis/output/disabled
    chown www-data.www-data /results/analysis/output
    chown www-data.www-data /results/analysis/output/disabled

    # some systems export a different /results for reports
    # don't want to squash that link.
    if [ ! -h /var/www/output ]; then
        # link does not exist...but it might be a file or dir.
        ln -s -f /results/analysis/output /var/www/output
    fi
    
    rm -f /var/www/media
    ln -s /var/lib/python-support/python2.6/django/contrib/admin/media /var/www/media
    
    rm -f /var/www/site_media
    ln -s -f /opt/ion/iondb/media /var/www/site_media

    #symLink for plugin media
    rm -f /var/www/pluginMedia
    ln -s /results/pluginMedia /var/www/pluginMedia

    rm -f /results/analysis/output/tmap-*
    ln -s -f /results/referenceLibrary/tmap-* /results/analysis/output/
    
    rm -f /results/analysis/output/disabled/tmap-*
    ln -s -f /results/referenceLibrary/disabled/tmap-* /results/analysis/output/disabled

    #---														---#
    #---	Configure runlevels to start the daemons at boot	---#
    #---														---#
    DAEMONS=(
        ionCrawler
        ionJobServer
        ionArchive
        ionPlugin
        rabbitmq-server
        celeryd
        )
    for DAEMON in ${DAEMONS[@]}; do
        CMD="update-rc.d ${DAEMON} defaults 97"
        FOUND=`find /etc/rc?.d -type l | grep ${DAEMON} | wc -l`
        if [ "$FOUND" -ne 0 ]; then
            echo "using existing $DAEMON daemon configuration"
            echo "to reset to default use '$CMD'"
        else
            $CMD
        fi
    done
    

    # ------------------------------------------
    # Create directory for logging
    # ------------------------------------------
    mkdir -p /var/log/ion
    chown www-data.www-data /var/log/ion
    chmod a+w /var/log/ion
    #special for ionPlugin who used to run as www-data
    if [ -e /var/log/ion/ionPlugin.log ]; then
        chmod a+w /var/log/ion/ionPlugin.log || true
    fi
    # touchy code
    for log_file in django.log iarchive.log crawl.log ionPlugin.log
    do
        touch /var/log/ion/$log_file
        chown :www-data /var/log/ion/$log_file
        chmod g+rw /var/log/ion/$log_file
    done

    chown -R www-data:www-data @ION_INSTALL_PREFIX@/iondb

    # ------------------------------------------
    # Modify sudoers
    # ------------------------------------------
    SUDOFILE=/etc/sudoers
    sed -i '/www-data/ d' ${SUDOFILE}
    echo "www-data ALL=(ALL) NOPASSWD: /sbin/shutdown, /usr/bin/at, /usr/bin/aptitude, /usr/bin/apt-get, /usr/sbin/TSconfig, /opt/ion/onetouch/findHosts.py" >> ${SUDOFILE}
    
    #--------------------------------------------------#
    #---	Remove possible stale ion packages      ---#
    #--------------------------------------------------#
    if [ -d @PYTHON_LOCAL_SITE_PACKAGES@/ion ]; then
        rm -rf @PYTHON_LOCAL_SITE_PACKAGES@/ion
    fi
   
    


    #-------------------------------------------------------# 
    #   Initial config requires creating a django superuser #
    #   this step requires django-tastypie be installed     #
    #-------------------------------------------------------#
    cd @ION_INSTALL_PREFIX@/iondb/bin && python initsprusr.py ; cd -

    # Initializes django (???)
    cd @ION_INSTALL_PREFIX@/iondb/ && python manage.py syncdb ; cd -
    # Loads Test Fragment entries into database
    cd @ION_INSTALL_PREFIX@/iondb/ && python manage.py loaddata template_init.json ; cd -
    # Updates an existing database schema
    cd @ION_INSTALL_PREFIX@/iondb/bin/ && python migrate.py ; cd -
    # Creates default report templates with site-specific content
    cd @ION_INSTALL_PREFIX@/iondb/bin/ && python base_template.py ; cd -
    /bin/chown www-data:www-data @ION_INSTALL_PREFIX@/iondb/templates/rundb/php_base.html
    # Updates existing database entries
    cd @ION_INSTALL_PREFIX@/iondb/bin/ && python install_script.py ; cd -

    echo "NODENAME=rabbit@localhost" > /etc/rabbitmq/rabbitmq.conf
    service rabbitmq-server restart
    invoke-rc.d apache2 restart
    invoke-rc.d ionCrawler start
    invoke-rc.d ionJobServer start
    invoke-rc.d ionArchive start
    invoke-rc.d ionPlugin start
    invoke-rc.d celeryd start

    # -------------------------------------------------------------------------
    # Configure Celery's RabbitMQ user, vhost, and permission state
    # -------------------------------------------------------------------------
    if [[ ! `rabbitmqctl list_users|grep ion` ]]; then
        echo "Adding RabbitMQ user 'ion'"
        rabbitmqctl add_user ion ionadmin
    fi
    if [[ ! `rabbitmqctl list_vhosts|grep ion` ]]; then
        echo "Adding RabbitMQ vhost 'ion' and setting permissions for user 'ion'"
        rabbitmqctl add_vhost ion
        rabbitmqctl set_permissions -p ion ion "" ".*" ".*"
    fi

    #load the references for a first time
    (wget -q -O /dev/null http://localhost/rundb/references > /dev/null) || \
        echo "Loading references failed."

    #load the config page to update plugins
    (wget -q -O /dev/null http://localhost/rundb/config> /dev/null) || \
        echo "Loading config page failed."

    # command to execute
    COMMAND="@ION_INSTALL_PREFIX@/iondb/bin/runnightly.sh"

    # generate two random names for temporary files.
    FILE="/tmp/$(basename $0).$RANDOM.txt"
    FILE2="/tmp/$(basename $0).$RANDOM.txt"

    # Entry we are adding to the crontab.
    ENTRY="0 6 * * * $COMMAND"

    # read in the users crontab entry into our random file
    (crontab -u ionadmin -l > $FILE 2> /dev/null) || true

    # Filter out our commands, & put the remaining lines in
    # our second file
    (cat $FILE | grep -v "$COMMAND" > $FILE2) || true

    # add our commands to the second file
    echo "$ENTRY" >> $FILE2

    # reload our file into crontab
    comm="crontab $FILE2"

    #
    # use su - username if we are adding to another users crontab.
    su - ionadmin -c "$comm"

    # remove our tmp files
    rm $FILE $FILE2

    ;;
esac

exit 0


