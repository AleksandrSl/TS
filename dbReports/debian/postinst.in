#!/bin/bash
# Copyright (C) 2010 Ion Torrent Systems, Inc. All Rights Reserved
set -e
#set -x
echo "postinst $@"

case "$1" in
    configure)

    #MegaCli64 library support
    if [ -e /lib/libsysfs.so.2.0.1 ]; then
        if [ -h /usr/lib64/libsysfs.so.2.0.2 ]; then
            echo `ls -l /usr/lib64/libsysfs.so.2.0.2`
        else
            ln -s /lib/libsysfs.so.2.0.1 /usr/lib64/libsysfs.so.2.0.2 || true
        fi
    fi

    chmod ugo+x @ION_INSTALL_PREFIX@/iondb/bin/*

    DJANGOADMIN=@ION_INSTALL_PREFIX@/manage.py
    chmod ugo+x ${DJANGOADMIN}

    #remove OneTouch update temp files
	if [ -e /tmp/OTstatus ]; then
        rm /tmp/OTstatus
    fi
	if [ -e /tmp/OTlock ]; then
        rm /tmp/OTlock
    fi

    ## Early trigger of python support
    #  This normally runs at the end of an apt-get run
    #  But if modules we need are installed in the same pass various tasks fail due to missing packages,
    #  because they aren't symlinked yet.
    if which update-python-modules; then
        update-python-modules --post-install
    fi

    ## Precompile / recompile python packages
    #/usr/bin/python -O -m compileall "@ION_INSTALL_PREFIX@/iondb/"
    (/usr/bin/python -m compileall -q -f "@ION_INSTALL_PREFIX@/iondb/" || /bin/true)

    #---											---#
    #---	Genome Directories Permissions, etc.	---#
    #---	head node only; /results shared out		---#
    #---											---#
    #will this always be results?
    mkdir -p /results/referenceLibrary/temp
    mkdir -p /results/referenceLibrary/tmap-f1
    mkdir -p /results/referenceLibrary/tmap-f2
    mkdir -p /results/referenceLibrary/tmap-f3
    mkdir -p /results/referenceLibrary/disabled/tmap-f1
    mkdir -p /results/referenceLibrary/disabled/tmap-f2
    mkdir -p /results/referenceLibrary/disabled/tmap-f3
    chmod -R 777 /results/referenceLibrary/temp
    chmod -R 777 /results/referenceLibrary/tmap-f1
    chmod -R 777 /results/referenceLibrary/tmap-f2
    chmod -R 777 /results/referenceLibrary/tmap-f3
    chmod -R 777 /results/referenceLibrary/disabled
    #make pluginMedia dir
    mkdir -p /results/pluginMedia
    chmod -R 777 /results/pluginMedia

    #	------------------------------------------
    #	Replace existing httpd.conf
    #	------------------------------------------
    # If exists and non-empty, use numbered backups - old.1, old.2, ...
    if [ -s /etc/apache2/httpd.conf ]; then
        mv -v --backup=numbered /etc/apache2/httpd.conf /etc/apache2/httpd.conf.old
    fi
    # Default Ubuntu file is empty. Config now in /etc/apache2/conf.d/
    touch /etc/apache2/httpd.conf

    #create hard-coded credentials to handle <Location "/basicauthlogout"> within torrent-server.in
    htpasswd -b -c /etc/apache2/users logout logout

    # Enable mod_wsgi, mod_rewrite, mod_expires
    /usr/sbin/a2enmod wsgi
    /usr/sbin/a2enmod rewrite
    /usr/sbin/a2enmod expires
    /usr/sbin/a2enmod ssl
    /usr/sbin/a2enmod headers

    # Switch to the torrent-server apache vhost - remove stock ubuntu vhosts
    /usr/sbin/a2dissite default
    /usr/sbin/a2dissite default-ssl

    # Some machines have files instead of symlinks here, which a2ensite and a2dissite choke on.
    /bin/rm -f /etc/apache2/sites-enabled/default /etc/apache2/sites-enabled/default-ssl
    /bin/rm -f /etc/apache2/sites-enabled/torrent-server /etc/apache2/sites-enabled/torrent-server-ssl

    # Enable Torrent Suite vhosts - http and https
    /usr/sbin/a2ensite torrent-server
    # Only enable https if user configured it -
    #   file is installed as torrent-server-ssl.example and must be edited
    [ -e /etc/apache2/sites-available/torrent-server-ssl ] && /usr/sbin/a2ensite torrent-server-ssl

    # apache2 restarted by invoke-rc.d command below

    #	------------------------------------------
    #	Additional apache2 related configurations
    #	------------------------------------------
    mkdir -p /results/analysis/output
    mkdir -p /results/analysis/output/disabled
    chown www-data.www-data /results/analysis/output
    chown www-data.www-data /results/analysis/output/disabled

    # some systems export a different /results for reports
    # don't want to squash that link.
    if [ ! -h /var/www/output ]; then
        # link does not exist...but it might be a file or dir.
        ln -s -f /results/analysis/output /var/www/output
    fi

    # Note, was a symlink, now a folder
    rm -rf /var/www/media
    mkdir -p /var/www/media

    rm -f /var/www/site_media
    ln -s -f @ION_INSTALL_PREFIX@/iondb/media /var/www/site_media

    #symLink for plugin media
    rm -f /var/www/pluginMedia
    ln -s /results/pluginMedia /var/www/pluginMedia

    rm -f /results/analysis/output/tmap-*
    ln -s -f /results/referenceLibrary/tmap-* /results/analysis/output/

    rm -f /results/analysis/output/disabled/tmap-*
    ln -s -f /results/referenceLibrary/disabled/tmap-* /results/analysis/output/disabled

    #---														---#
    #---	Configure runlevels to start the daemons at boot	---#
    #---														---#
    DAEMONS=(
        ionCrawler
        ionJobServer
        ionPlugin
        rabbitmq-server
        celeryd
        )
    for DAEMON in ${DAEMONS[@]}; do
        CMD="update-rc.d ${DAEMON} defaults 97"
        FOUND=`find /etc/rc?.d -type l | grep ${DAEMON} | wc -l`
        if [ "$FOUND" -ne 0 ]; then
            echo "using existing $DAEMON daemon configuration"
            echo "to reset to default use '$CMD'"
        else
            $CMD
        fi
    done


    # ------------------------------------------
    # Create directory for logging
    # ------------------------------------------
    mkdir -p /var/log/ion
    chown www-data.www-data /var/log/ion
    chmod a+w /var/log/ion
    #special for ionPlugin who used to run as www-data
    if [ -e /var/log/ion/ionPlugin.log ]; then
        chmod a+w /var/log/ion/ionPlugin.log || true
    fi
    # touchy code
    for log_file in django.log crawl.log ionPlugin.log celery_plugins.log data_management.log
    do
        touch /var/log/ion/$log_file
        chown :www-data /var/log/ion/$log_file
        chmod g+rw /var/log/ion/$log_file
    done
    chown ionian:www-data /var/log/ion/django.log
    chown ionian:www-data /var/log/ion/celery_plugins.log

    chown -R www-data:www-data @ION_INSTALL_PREFIX@/iondb

    # ------------------------------------------
    # Modify sudoers
    # ------------------------------------------
    SUDOFILE=/etc/sudoers
    sed -i '/www-data/ d' ${SUDOFILE}
    echo "www-data ALL=(ALL) NOPASSWD: /sbin/shutdown, /usr/bin/at, /usr/bin/aptitude, /usr/bin/apt-get, /usr/sbin/TSconfig, @ION_INSTALL_PREFIX@/onetouch/findHosts.py" >> ${SUDOFILE}

    #--------------------------------------------------#
    #---	Remove possible stale ion packages      ---#
    #--------------------------------------------------#
    if [ -d @PYTHON_LOCAL_SITE_PACKAGES@/ion ]; then
        rm -rf @PYTHON_LOCAL_SITE_PACKAGES@/ion
    fi

    # Setup python and database environment
    (
        cd @ION_INSTALL_PREFIX@/iondb/

        # Create ionadmin if a superuser doesn't exist
        /usr/bin/python ./bin/initsprusr.py

        # Legacy DB migration - Updates an existing database schema to 2.2
        /usr/bin/python ./bin/migrate.py

        # Django South DB migration - applies changes in rundb/migrations/
        /usr/bin/python ${DJANGOADMIN} migrate --all --ignore-ghost-migrations --noinput

        # Print current db migration state for diagnostic purposes
        /usr/bin/python ${DJANGOADMIN} migrate --list --noinput

        # Full syncdb to create ContentTypes and Permissions
        /usr/bin/python ${DJANGOADMIN} syncdb --noinput --all

        # Backfill tastypie API keys
        /usr/bin/python ${DJANGOADMIN} backfill_api_keys

        # Loads Test Fragment entries into database
        /usr/bin/python ${DJANGOADMIN} loaddata template_init.json

        # Creates default report templates with site-specific content
        /usr/bin/python ./bin/base_template.py
        /bin/chown www-data:www-data @ION_INSTALL_PREFIX@/iondb/templates/rundb/php_base.html

        # Updates existing database entries
        # THIS HAS TO HAPPEN AFTER THE PHP_BASE.HTML FILE IS PUT INTO PLACE DO NOT MOVE
        /usr/bin/python ./bin/install_script.py

        # Loads DMFileSet entries into database
        /usr/bin/python ./bin/install_dmfilesets.py

        # Collect static files (eg. admin pages css/js)
        /usr/bin/python ${DJANGOADMIN} collectstatic --verbosity=0 --noinput --clear --link

        cd -
    )

    echo "NODENAME=rabbit@localhost" > /etc/rabbitmq/rabbitmq-env.conf
    cat > /etc/rabbitmq/rabbitmq.config <<EOF
[
    {rabbit, [{disk_free_limit, 110000000}]}
].
EOF
    if ! service rabbitmq-server restart; then
        service rabbitmq-server stop
        rm -rf /var/lib/rabbitmq/mnesia/rabbit@localhost || true
        service rabbitmq-server start
    fi
    invoke-rc.d apache2 restart
    invoke-rc.d celeryd restart

    # -------------------------------------------------------------------------
    # Configure Celery's RabbitMQ user, vhost, and permission state
    # -------------------------------------------------------------------------
    if [[ ! `rabbitmqctl list_users|grep ^ion` ]]; then
        echo "Adding RabbitMQ user 'ion'"
        rabbitmqctl add_user ion ionadmin
    fi
    if [[ ! `rabbitmqctl list_vhosts|grep ^ion` ]]; then
        echo "Adding RabbitMQ vhost 'ion' and setting permissions for user 'ion'"
        rabbitmqctl add_vhost ion
        rabbitmqctl set_permissions -p ion ion ".*" ".*" ".*"
    fi

    #load the references for a first time
    (wget -q -O /dev/null http://localhost/configure/references/ > /dev/null) || \
        echo "Loading references failed."

    #load the config page to update plugins and publishers
    (wget -q -O /dev/null http://localhost/configure/plugins/ > /dev/null) || \
        echo "Loading plugin config page failed."

    # Schedule plugin rescan task to run after various delays, catches plugins installed by other packages.
    python -c 'import iondb.bin.djangoinit, iondb.plugins.tasks as tasks; tasks.add_remove_plugins.apply_async(countdown=2)'
    python -c 'import iondb.bin.djangoinit, iondb.plugins.tasks as tasks; tasks.add_remove_plugins.apply_async(countdown=60)'

    #TS-5598: Schedule task to fill diskusage field for all Experiments
    python -c 'import iondb.bin.djangoinit, iondb.rundb.tasks as tasks; tasks.backfill_exp_diskusage.apply_async(countdown=40)'

    #TS-5908: Schedule task to fix value in Results.diskusage field
    python -c 'import iondb.bin.djangoinit, iondb.rundb.tasks as tasks; tasks.backfill_result_diskusage.apply_async(countdown=40)'

    # Rescan size and inode count for PluginResults
    python -c 'import iondb.bin.djangoinit, iondb.rundb.tasks as tasks; tasks.backfill_pluginresult_diskusage.apply_async(countdown=40)'

    #TS-6081: Create DMFileStat objs for existing Results objs without them.
    echo "Migrating to new Data Management..."
    python -c 'import iondb.bin.djangoinit, iondb.rundb.data.data_management as dm; dm.backfill_create_dmfilestat()'
    
    # Now that prerequisite tasks have been run or scheduled, restart crawler.
    invoke-rc.d ionJobServer restart
    invoke-rc.d ionPlugin restart
    invoke-rc.d ionCrawler restart
    ;;
esac

exit 0
