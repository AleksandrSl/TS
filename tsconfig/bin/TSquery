#!/bin/bash
# Copyright (C) 2011 Ion Torrent Systems, Inc. All Rights Reserved
set -e

#--------------------------------------
#--- Include function definition file
#--------------------------------------
TSCONFIG_SRC_DIR='/usr/share/ion-tsconfig'
source $TSCONFIG_SRC_DIR/ts_params
source $TSCONFIG_SRC_DIR/ts_functions
#--------------------------------------
# Functions
#--------------------------------------
function print_help ()
{
    echo
    echo "Usage: $0 [option]..."
    echo -e "\t--eth-dev                 Specify eth device to query"
    echo -e "\t--debug, -d               Prints script commands when executing (set -x)"
    echo -e "\t--help, -h                Prints command line args"
    echo -e "\t--version, -v             Prints version"
    echo
}

#--------------------------------------
# Trap exit
#--------------------------------------
trap 'error ${LINENO}' ERR

#--------------------------------------
# Default settings
#--------------------------------------
version=`echo '$Revision$'|awk '{print $2}'`
device=$(outbound_net_port)
environment='/etc/environment'
configfile=/etc/network/interfaces

#--------------------------------------
# command line argument parsing
#--------------------------------------
#---    We convert all arguments to lower case  ---#
while [ $# != 0 ]; do
    case ${1,,} in
        '--help'|'-h')
            print_help
            exit 0
        ;;
        
        '--version'|'-v')
            echo "`basename $0` version $version"
            if [ -f /opt/ion/bin/ion-tsconfig.version.env ]; then
                source /opt/ion/bin/ion-tsconfig.version.env
                IonVersionGetFullVersion ion-tsconfig
            fi
            exit 0
        ;;
        
        '--debug'|'-d')
        set -x
        ;;
        
        '--eth-dev')
        shift
        device="$1"
        ;;
        
        *)
        log "Unknown option: $1"
        echo "Unknown option: $1.  Exiting"
        echo "Use TSquery --help for options."
        exit 1
        ;;
        
    esac
    shift
done


# Example string
#http_proxy=http://bpuc:password@carnivore.com:3128
#http_proxy=http://carnivore.com:312
if ! grep -q http_proxy $environment; then
    address=
    port=
    username=
    password=
else
    # strip http_proxy=
    full_str=$(grep ^http_proxy $environment|awk -F= '{print $2}')
    prefix=$(echo $full_str|awk -F: '{print $1'})
    full_str=$(echo $full_str|sed 's/.*\/\/\(.*\)/\1/')
    
    if echo $full_str|grep -q "@"; then
        # get username and password: everything before @ symbol
        auth=$(echo $full_str|sed 's/\(.*\)@.*/\1/')
        username=$(echo $auth|cut -d: -f1)
        password=$(echo $auth|cut -d: -f2)
        # get address and port: everything after @ symbol
        other=$(echo $full_str|sed 's/.*@\(.*\)/\1/')
        address=$(echo $other|cut -d: -f1)
        port=$(echo $other|cut -d: -f2)
    else
        # get address and port:
        address=$(echo $full_str|cut -d: -f1)
        port=$(echo $full_str|cut -d: -f2)
    fi
    address=${prefix}://${address}
fi
echo "proxy_address:$address"
echo "proxy_port:$port"
echo "proxy_username:$username"
echo "proxy_password:$password"

echo -e "network_device:$device"
if grep "^iface $device" $configfile | grep -q static; then
    echo "network_mode:static"
elif grep "^iface $device" $configfile | grep -q dhcp; then
    echo "network_mode:dhcp"
    echo "network_address:$(getnetworkIP $device)"
    echo "network_subnet:$(getsubnetmask $device)"
    echo "network_gateway:$(getgateway)"
else
    echo "network_mode:not found"
fi

#TODO: Discover whether its dhcp or static
if grep "^iface $device" $configfile | grep -q static; then
    sed -n "/iface $device inet static/,/^iface/ s/address .*/&/p" $configfile|awk '{print "network_address:"$2}'
    sed -n "/iface $device inet static/,/^iface/ s/netmask .*/&/p" $configfile|awk '{print "network_subnet:"$2}'
    sed -n "/iface $device inet static/,/^iface/ s/broadcast .*/&/p" $configfile|awk '{print "network_broadcast:"$2}'
    sed -n "/iface $device inet static/,/^iface/ s/gateway .*/&/p" $configfile|awk '{print "network_gateway:"$2}'
fi

cnt=0
for nameserver in $(grep nameserver /etc/resolv.conf|awk '{print $2}'); do
    if [ $cnt -gt 0 ]; then
        nameservers="$nameservers,$nameserver"
    else
        nameservers=$nameserver
    fi
    cnt=$((cnt+1))
done
nameservers=$(echo $nameservers|sed 's/ /,/g')
echo "network_nameservers:$nameservers"

exit 0

