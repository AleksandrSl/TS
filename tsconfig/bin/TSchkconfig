#!/bin/bash
# Copyright (C) 2010-2013 Ion Torrent Systems, Inc. All Rights Reserved
#
#	Torrent Server Checking Configuration

set -e

#------------------------------------------#
#--- parameters and function definition ---#
#------------------------------------------#
#SGE_ROOT=/var/lib/gridengine/
#SGE_CELL=iontorrent
TSCONFIG_SRC_DIR='/usr/share/ion-tsconfig'
source $TSCONFIG_SRC_DIR/ts_params
source $TSCONFIG_SRC_DIR/ts_functions
#--------------------------------------
# trap exit codes
#--------------------------------------
trap 'error ${LINENO}' ERR

get_Netmask

if [ -f /opt/ion/bin/ion-tsconfig.version.env ]; then
    source /opt/ion/bin/ion-tsconfig.version.env
fi
log "version "`IonVersionGetMajor`"."`IonVersionGetMinor`"."`IonVersionGetRelease`" ("`IonVersionGetGitHash`")"

#------------------------------------------#
#---	Ensure /etc/hosts is correct	---#
#------------------------------------------#
#
if is_master ; then
	# SGE Master node
    SGE_ROOT=${SGE_ROOT:-/var/lib/gridengine}
    SGE_CELL=${SGE_CELL:-iontorrent}
	sgeFQDN=$(cat $SGE_ROOT/$SGE_CELL/common/act_qmaster|awk '{print $1}')
    simpleHostName=$(echo $sgeFQDN|cut -f1 -d".")

    # check that loopback exists
    if (grep -q "^127.0.1.1" /etc/hosts); then
	    log "loopback exists in /etc/hosts"
        if (grep "^127.0.1.1" /etc/hosts|grep -q $simpleHostName); then
        	log "act_master host $simpleHostName is in loopback"
        else
        	log "WARNING: act_master host $simpleHostName is NOT in loopback"
        fi
    else
	    echo "Does not exist"
        loopback="127.0.1.1\t${sgeFQDN}\t$simpleHostName"
        # Insert the second loopback after first loopback
        sed -i "s/\(^127.0.0.1.*\)/\1\n${loopback}/" /etc/hosts
        log "Repaired /etc/hosts:"
        log "FQDN=${sgeFQDN}"
    fi
else
	# SGE Compute node
	log "/etc/hosts check is not supported on Compute Nodes."
fi
#------------------------------------------#
#---	check for network config change	---#
#------------------------------------------#
if is_master; then
    port=$(outbound_net_port)
    prevAddress=$(grep "ipaddress:" $TSCONFIG_DIR/$TSCONFIG_CONF|cut -f2 -d":")
    currAddress=$(/sbin/ifconfig $port | awk '/inet / { print $2 } ' | sed -e s/addr://)
    if [ "$prevAddress" == "" -o "$currAddress" == "" ]; then
    	log "Error determining IP addresses: prev:$prevAddress curr:$currAddress"
    else
        if [ $(echo "$prevAddress") != $(echo "$currAddress") ]; then
	    log "Old: $prevAddress New: $currAddress"
	    # update conf file with new ip
	    sed -i "s/ipaddress:.*/ipaddress:$currAddress/" $TSCONFIG_DIR/$TSCONFIG_CONF
        else
    	    log "No change in IP detected:$currAddress"
        fi
    fi

    # Check for running postgres service; re-run config if its not
    POSTGRES_CMD=$(basename $(find /etc/init.d -name postgres*))
    if ! service $POSTGRES_CMD status >/dev/null;then
    	log "postgres service is not running; restarting postgresql"
        if ! service $POSTGRES_CMD start; then
            log "Could not start postgresql database"
        fi
    fi
else
	log "IP address check is not supported on compute nodes"
fi


exit 0
