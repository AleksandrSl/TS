#!/bin/bash
# Copyright (C) 2011-2014 Ion Torrent Systems, Inc. All Rights Reserved
#
# Purpose: Configure an ubuntu (currently 10.04 lucid distribution) server for
# use as a Torrent Server.
#
set -e

#---                                    ---#
#--- Include function definition file	---#
#---                                    ---#
TSCONFIG_SRC_DIR='/usr/share/ion-tsconfig'
source $TSCONFIG_SRC_DIR/ts_params
source $TSCONFIG_SRC_DIR/ts_functions
LOCK_FILE=/var/lock/tsconfiglock

#--------------------------------------
# trap exit codes
#--------------------------------------
trap 'error ${LINENO}' ERR

#---                            ---#
#---    Variable Declarations   ---#
#---                            ---#
EXECUTE=0
OPTARGS="$@"
CONF_HEAD_NODE=0        # Enables SGE qmaster,postgres,apache2,/results sharing
CONF_COMPUTE_NODE=0     # Enables SGE exec
CONF_PGM_SUPPORT=0      # Enables direct-connected instruments and data dir sharing
REMOVE_PGM_SUPPORT=0    # Removes support for direct-connected instruments
CONF_FTP_SERVER=0       # Configure FTP Service
CONF_NTP_SERVER=0       # Configure NTP Service
UPDATE_SOFTWARE=0       # Get software updates and install
UPDATE_SOFTWARE_CLUSTER=0       # Get software updates and install on cluster nodes
UPDATE_HOSTNAME=0       # Change the hostname (requires reboot)
CONF_TIME_ZONE=0        # Run timezone configuration script
CONF_POSTFIX=0          # Run postfix configuration script
ETH_DEV=$(outbound_net_port)    # outgoing network device
APT_USB=0               # flags use of USB key drive as apt repository
UNCONF_SERVER=0		# Removes Head Node settings and configurations
INITIAL_CONFIG=1        # Flags interactive configuration settings - only for initial configuration
CHANGE_PASSWORD=0       # Change ionadmin password.
PURGE_ALL_DEB=0         # Delete all deb package files in apt cache
RECONFIGURE=0           # Re-run configuration steps only
SECURITY_UPDATE=0       # Enable updating packages with security updates
CONF_APT_CACHING=false  # Install apt-cacher-ng and configure
version=`echo '$Revision$'|awk '{print $2}'`

#-------------------------------------------------------------------------------
# Check for valid distribution
# Only Ubuntu 14.04 allowed at this time
#-------------------------------------------------------------------------------
if test $EXECUTE; then
    if [ $(distrib_rel) == '10.04' ]; then
        #echo "Valid OS"
        :
    else
        echo "This release not supported.  Try TSconfig-ansible"
        exit 0
    fi
fi

#---                                    ---#
#---    Command Line Options Parsing    ---#
#---                                    ---#

#---    First, if no args given, print help ---#
if [ $# == 0 ]; then
    print_help
    exit 0
fi

#---    We convert all arguments to lower case  ---#
while [ $# != 0 ]; do
    case ${1,,} in
        '-g')
            EXECUTE=1
        ;;
        '-d'|'--debug')
            set -x
        ;;
        '-m')
            echo -e "\nOption -m has been replaced\n"
            echo -e "Use --configure-server instead\n\n"
            exit 0
        ;;
        '-i')
            echo -e "\nOption -i has been replaced\n"
            echo -e "Use --configure-pgm-support instead\n\n"
            exit 0
        ;;
        '--configure-server')
            if [ $EXECUTE == 1 ];then user_msg "Configure server as Head Node"; fi
            CONF_HEAD_NODE=1
            CONF_PGM_SUPPORT=1
        ;;
        '--unconfigure-server')
            if [ $EXECUTE == 1 ];then user_msg "Un-configure server settings"; fi
	        UNCONF_SERVER=1
	    ;;
        '--configure-compute')
            if [ $EXECUTE == 1 ];then user_msg "Configure server as Compute Node"; fi
            CONF_COMPUTE_NODE=1
            CONF_PGM_SUPPORT=0
        ;;
        '--reconfigure')
            RECONFIGURE=1
        ;;
        '--skip-init')   # do not execute interactive, initialization steps
            INITIAL_CONFIG=0
        ;;
        '--skip-pgm-config'|'--skip-instrument-config')
            CONF_PGM_SUPPORT=0
        ;;
        '--configure-pgm-support'|'--configure-instrument-support')
            if [ $EXECUTE == 1 ];then user_msg "Configure direct-connected instrument support"; fi
            CONF_PGM_SUPPORT=1
        ;;
        '--remove-pgm-support'|'--remove-instrument-support')
            if [ $EXECUTE == 1 ];then user_msg "Remove direct-connected instrument support"; fi
            REMOVE_PGM_SUPPORT=1
            CONF_PGM_SUPPORT=0
        ;;
        '--configure-ftp')
            CONF_FTP_SERVER=1
        ;;
        '--configure-ntp')
            CONF_NTP_SERVER=1
        ;;
        '--change-hostname'|'-r')
            if [ $EXECUTE == 1 ];then user_msg "Change server hostname"; fi
            UPDATE_HOSTNAME=1
            CONF_PGM_SUPPORT=0
        ;;
        '--update-torrent-suite'|'-s')
            if [ $EXECUTE == 1 ];then user_msg "Check for and install Ion Software updates"; fi
            UPDATE_SOFTWARE=1
            CONF_PGM_SUPPORT=0  #makes sure we don't do initial configuring
        ;;
        '--security-update')
            if [ $EXECUTE == 1 ];then user_msg "Check for and install packages with security updates"; fi
            SECURITY_UPDATE=1
        ;;
        '--update-cluster')
            if [ $EXECUTE == 1 ];then user_msg "Check for and install Ion Software updates on the cluster nodes"; fi
            UPDATE_SOFTWARE_CLUSTER=1
            CONF_PGM_SUPPORT=0  #makes sure we don't do initial configuring
            if [ $(id -u) == 0 ]; then
                USC_CMD="sudo -u $TSCONFIG_CLUSTER_ADMIN grp_update.sh"
            else
                USC_CMD="grp_update.sh"
            fi
        ;;
        '--configure-timezone'|'-z')
            if [ $EXECUTE == 1 ];then user_msg "Configure time zone settings"; fi
            CONF_TIME_ZONE=1
            CONF_PGM_SUPPORT=0
        ;;
        '--configure-postfix'|'-p')
            if [ $EXECUTE == 1 ];then user_msg "Configure postfix mail settings"; fi
            CONF_POSTFIX=1
            CONF_PGM_SUPPORT=0
        ;;
        '--configure-apt-cache')
            if [ $EXECUTE == 1 ];then user_msg "Configure apt-cache settings"; fi
            CONF_APT_CACHING=true
        ;;
        '--change-password')
            CHANGE_PASSWORD=1
        ;;
        '--eth-dev'|'-e')
            shift
            ETH_DEV=$1
            if [ $EXECUTE == 1 ];then user_msg "Ethernet device specified: $ETH_DEV"; fi
        ;;
        '--apt-usb')
            if [ $EXECUTE == 1 ];then user_msg "Use Ion Install USB Drive as apt repository"; fi
            APT_USB=1
        ;;
        '--purge-all-deb')
            PURGE_ALL_DEB=1
        ;;
        '--help'|'-h'|\?)
            print_help
            exit 0
        ;;
        '--version'|'-v')
            user_msg "`basename $0` version $version"
            if [ -f /opt/ion/bin/ion-tsconfig.version.env ]; then
                source /opt/ion/bin/ion-tsconfig.version.env
                IonVersionGetFullVersion ion-tsconfig
            fi
			exit 0
        ;;
        *)
        echo "Unknown option: $1.  Exiting"
        echo "Use TSconfig --help for options."
        exit 1
        ;;
    esac
    shift
done

#---                                ---#
#---    Check for too many options  ---#
#---                                ---#
NOPTS=$(how_many_options) || true
if [ $NOPTS -gt 1 ]; then
    echo -e "\nOnly one option at a time is allowed.\n"
    exit 0
fi

#---                                                                        ---#
#---    Exit and call script again this time logging all stdout and stderr  ---#
#---                                                                        ---#
if [ $EXECUTE -eq 0 ]; then
    needs_root
	rotate_log
    exec 3>&2   # fd 3 opened and directed to stderr; 'stores' original stderr fd
    exec 2>$TSCONFIG_LOG_DIR/$TSCONFIG_DEBUG_LOG    # Redirect stderr to a file
    echo $(date) > $TSCONFIG_LOG_DIR/$TSCONFIG_INSTALL_LOG
	$0 -g $OPTARGS | tee -a $TSCONFIG_LOG_DIR/$TSCONFIG_INSTALL_LOG
    exit ${PIPESTATUS[0]}
fi

#---                    ---#
#---    Main Execution  ---#
#---                    ---#
#-----------------------------------------
# Need to acquire the lock file to proceed
#-----------------------------------------
if mkdir $LOCK_FILE; then
  trap 'rm -rf "$LOCK_FILE"' 0
  PID_LOCKED=1
  echo "Locking succeeded" 1>&2
else
  echo "Lock failed - is previous instance of TSconfig running?"
  exit 1
fi

if [ -f /opt/ion/bin/ion-tsconfig.version.env ]; then
    source /opt/ion/bin/ion-tsconfig.version.env
fi
log "version "`IonVersionGetMajor`"."`IonVersionGetMinor`"."`IonVersionGetRelease`" ("`IonVersionGetGitHash`")"

#---                                                    ---#
#---    Test for bad command line option combinations   ---#
#---                                                    ---#
if [ $CONF_PGM_SUPPORT == 1 -a $REMOVE_PGM_SUPPORT == 1 ]; then
    echo
    echo "ERROR: Choose either --raw-data-server or --delete-raw-data-server, not both."
    echo "Use TSconfig --help for options."
    echo
    log "ERROR: Command line option error"
    log "$OPTARGS"
    exit 1
fi

#---    Typical TS config should be with direct connect instruments enabled    ---#
if [ $CONF_HEAD_NODE == 1 ]; then
    if [ $CONF_PGM_SUPPORT == 0 ]; then
        REMOVE_PGM_SUPPORT=1
    fi
fi

#---
#---    N.B. When a server configuration is specified, all other options are ignored
#---    except for the CONF_PGM_SUPPORT option
#---
if [ $CONF_HEAD_NODE == 1 -o $CONF_COMPUTE_NODE == 1 ]; then

    #if ! network_tests $ETH_DEV; then
    #    log "Cannot configure node: Failed network test"
    #    exit 1
    #fi
    # Root partition space check
    free_root=$(df -Pk |grep `mount|grep "on / type"|awk '{print $1}'`|awk '{print $4}')
    log "root partition free space:$free_root kb"
    free_threshold=1048576
    if [[ $free_root -lt $free_threshold ]]; then

        log "Not enough disk space to install software (/ has $free_root kb free)"
        user_msg "=================================================================="
        user_msg "Not enough disk space to install software"
        user_msg "/ partition has $free_root kb free and needs $free_threshold kb"
        user_msg "Torrent Server configuration has been cancelled."
        user_msg "=================================================================="
        exit 0
    fi

    if $CONF_APT_CACHING; then
        apt-get install apt-cacher-ng
        echo 'Acquire::http::Proxy "http://localhost:3142";' | sudo tee /etc/apt/apt.conf.d/01proxy
        echo "=================================================================="
        echo 'To disable apt-cacher-ng, uninstall the package and remove file /etc/apt/apt.conf.d/01proxy'
        echo "=================================================================="
        echo
    fi

    if [ $CONF_HEAD_NODE == 1 ]; then
    	log "Configure Head Node"
        config_head_node
    elif [ $CONF_COMPUTE_NODE == 1 ]; then
    	log "Configure Compute Node"
        config_compute_node
    fi

    #Setup direct-connected instrument support; export raw data directory
    if [ $CONF_PGM_SUPPORT == 1 ]; then
        config_pgm_support
    elif [ $REMOVE_PGM_SUPPORT == 1 ];then
    	log "Unconfigure direct-connected instrument support"
    	remove_pgm_support
    fi

    #Setup ftp server
    if [ $CONF_FTP_SERVER == 1 ]; then
        config_ftp
    fi

    #Setup ntp server
    if [ $CONF_NTP_SERVER == 1 ]; then
        config_ntp_server
    fi

    #Call initial configuration steps which require user input
    if [ $INITIAL_CONFIG == 1 ]; then
        exec 2>&3   # Redirect stderr (which points to a file) back to stderr (console)
        config_password
        dpkg-reconfigure tzdata
    fi

    date
    echo "=================================================================="
    echo "TSconfig configure process completed successfully"
    echo "=================================================================="

    exit 0
fi

#---
if [ $UNCONF_SERVER -eq 1 ]; then
    log "Unconfigure Server"

	echo
	echo "This will disable the server from functioning as a normal Torrent Server."
	echo "Only continue if you are prepared to reconfigure the server again."
	echo -n "Okay to continue? (n|Y) "
	read -p "Okay to continue? (n|Y) " userin
	if [ "$userin" != "Y" ]; then
		log "User-aborted unconfigure operation"
		exit 0
    fi

	unconfigure_torrentserver

    echo "=================================================================="
    echo "Unconfigure server process completed successfully"
    echo "=================================================================="
    log "Unconfigure server process completed successfully"
    exit 0
fi


#---
#---    N.B. When a software update is specified, all other options are ignored
#---
if [ $UPDATE_SOFTWARE == 1 ]; then
    if [ $APT_USB -eq 0 ]; then
        if ! network_tests $ETH_DEV; then
            msg="Cannot update software: Failed network test for device $ETH_DEV. Try using the --eth-dev argument to specify an alternate ethernet adapter"
            error "$0:${LINENO}" "${msg}" 1
        fi
    fi
    log "Torrent Suite update"
    # Root partition space check
    free_root=$(df -Pk |grep `mount|grep "on / type"|awk '{print $1}'`|awk '{print $4}')
    log "root partition free space:$free_root kb"
    free_threshold=1048576
    if [[ $free_root -lt $free_threshold ]]; then

        log "Not enough disk space to update software (/ has $free_root kb free)"
        user_msg "=================================================================="
        user_msg "Not enough disk space to update software"
        user_msg "/ partition has $free_root kb free and needs $free_threshold kb"
        user_msg "Ion Software update has been cancelled."
        user_msg "=================================================================="

    else

        ion_daemon_ctrl stop
        config_ionSoftware      #N.B. $SECURITY_UPDATE will be evaluated in this function

        echo "=================================================================="
        echo "This node's software updated"
        echo "=================================================================="
        log "This node's software updated"

        if [ $UPDATE_SOFTWARE_CLUSTER == 1 ]; then
            echo "=================================================================="
            echo "Updating software on the compute nodes"
            echo "=================================================================="
            $USC_CMD
            echo "=================================================================="
            echo "Compute Node software updated"
            echo "=================================================================="
            log "Compute Node software updated"
        fi

        echo "=================================================================="
        echo "TSconfig software update process completed successfully"
        echo "=================================================================="
        log "TSconfig process completed successfully"

    fi
    exit
fi

#---
#---    Option was called by itself
#---
if $CONF_APT_CACHING; then
    apt-get install apt-cacher-ng
    echo 'Acquire::http::Proxy "http://localhost:3142";' | sudo tee /etc/apt/apt.conf.d/01proxy
    echo "=================================================================="
    echo 'To disable apt-cacher-ng, uninstall the package and remove file /etc/apt/apt.conf.d/01proxy'
    echo "=================================================================="
    echo
fi

#---
#---    Option was called by itself
#---
if [ $UPDATE_SOFTWARE_CLUSTER == 1 ]; then
    echo "=================================================================="
    echo "Updating software on the compute nodes"
    echo "=================================================================="
    $USC_CMD
    echo "=================================================================="
    echo "Compute Node software updated"
    echo "=================================================================="
    log "Compute Node software updated"

    exit
fi

#---
#---    Option was called by itself
#---
if [ $SECURITY_UPDATE == 1 ]; then
    if [ $APT_USB -eq 0 ]; then
        if ! network_tests $ETH_DEV; then
            msg="Cannot update software: Failed network test for device $ETH_DEV. Try using the --eth-dev argument to specify an alternate ethernet adapter"
            error "$0:${LINENO}" "${msg}" 1
        fi
    fi
    #Processes should be stopped, update completed, restart processes
    ion_daemon_ctrl stop
    install_security_upgrades
    ion_daemon_ctrl restart

    exit
fi

#---
#---    Run the reconfiguration steps only
#---
if [ $RECONFIGURE == 1 ]; then
    log "Re-running configuration steps"
    echo "=================================================================="
    echo "Re-running configuration steps"
    if is_master; then
        log "No software package files will be updated"
        echo "No software package files will be updated"
        echo "=================================================================="
        reconfig_head_node
    else
        log "ubuntu system packages will be updated, but not Torrent Suite packages"
        echo "ubuntu system packages will be updated, but not Torrent Suite packages"
        echo "=================================================================="
        reconfig_compute_node
    fi
    exit 0
fi
#---
#---    N.B. When a hostname change is specified, all other options are ignored
#---
if [ $UPDATE_HOSTNAME == 1 ]; then
    # TEST CODE
    2>&-
    if is_master; then
    	echo -e "WARNING: Renaming a head node when there are compute nodes"
        echo -e "configured will break the cluster: the compute nodes will"
        echo -e "need to be reconfigured with the new head node name\n"
        #TODO: check the tsconf.conf file for compute nodes.
        #TODO: register compute nodes in tsconf.conf file.
	log "Changing hostname"
	change_hostname
    else

        log "Changing hostname of compute node is not supported"
        #change_hostname

        # TODO remove host from SGE
        # qconf -de <hostname>
        # qconf -ds <hostname>
        # qconf -dh <hostname>
        # remove from all.q (cluster queue)
        # remove from host group @allhosts
    fi
    exit 0
fi

#---
#---    N.B. When a delete raw data is specified, all other options are ignored
#---
if [ $REMOVE_PGM_SUPPORT == 1 ]; then
	log "Remove settings supporting direct-connected instruments"
    remove_pgm_support
    exit 0
fi

#---
#---    Execute the timezone configuration script
#---
if [ $CONF_TIME_ZONE == 1 ]; then
	log "Configuring timezone"
    dpkg-reconfigure tzdata
fi

#---
#---    Execute the postfix configuration script
#---
if [ $CONF_POSTFIX == 1 ]; then
	log "configuring postfix"
    dpkg-reconfigure postfix
fi
#---
#---    Execute the deb package purge command
#---
if [ $PURGE_ALL_DEB == 1 ]; then
    log "Deleting all deb package files"
    apt-get clean
fi
#---
#---    This is last because the flag is enabled by default in the script
#---
if [ $CONF_PGM_SUPPORT == 1 ]; then

    config_pgm_support

    exit 0
fi
if [ $CHANGE_PASSWORD == 1 ]; then
    exec 2>&3   # Redirect stderr (which points to a file) back to stderr (console)
    config_password
fi
exit 0
