---
# file: roles/common/tasks/main.yml

- name:
  include: '../../../globals.yml'
#-----------------------------------------------------------------------------
# On each compute node, we need to replicate the Ion Repository configured
# on the head node.
#-----------------------------------------------------------------------------
- name: Replicating head node's /etc/apt/source.list.d/
  copy: src={{item}} dest=/etc/apt/sources.list.d/ mode=0644
  when: "'{{ansible_hostname}}' != '{{groups.headnode[0]}}'"
  with_fileglob:
    - /etc/apt/sources.list.d/*

#-----------------------------------------------------------------------------
# Clean apt cache
#-----------------------------------------------------------------------------
- name: sudo apt-get autoclean
  shell: apt-get autoclean

#-----------------------------------------------------------------------------
# Disable installation of recommended and suggested debian packages
#-----------------------------------------------------------------------------
#- name: Disable apt installation of recommend and suggest packages
#  template: src=98recommends.j2 dest=/etc/apt/apt.conf.d/98recommends mode=0644

#-----------------------------------------------------------------------------
# Install system packages common to all servers
#-----------------------------------------------------------------------------
- name: preseed tmpreaper package
  script: tmpreaper.preseed
  
- name: Set package preseed values
  script: "{{ansible_env.PWD}}/files/grub-pc.preseed {{GRUB_BOOT_DEVICE}}"
  when: GRUB_BOOT_DEVICE is defined
  
- name: Install system packages
  apt: name={{item}} state=installed force=yes update_cache=yes cache_valid_time=300
  with_items: common_syspkg_list

#-----------------------------------------------------------------------------
#    named_core_files
#-----------------------------------------------------------------------------
- name: Enable named core files
  sysctl: name=kernel.core_pattern
            reload=yes
            state=present
            value='core.%e.%p.%h.%t'
    
#-----------------------------------------------------------------------------
#NOTE: required: ionian user be created prior to initial installation of ion-dbreports
# initialize_system_users

#-----------------------------------------------------------------------------
# Initialize ionian group and user
- name: Add group ionian
  group: name=ionian gid=1100 state=present system=yes
  
- name: Initialize ionian user
  user: name=ionian uid=1100 state=present system=yes group=ionian
  
# Initialize ionadmin
# This shell method is because of having to use this password creation method
- shell: bash -lc '/usr/bin/getent passwd | grep -q "^ionadmin:"'
  register: result
  ignore_errors: yes
  
- name: Initialize ionadmin user
  when: result|failed
  shell: /usr/sbin/useradd -m -s /bin/bash -p $(perl -e "print crypt(ionadmin, 'password')" $password) ionadmin;
  
- name: Add ionadmin to ionian www-data groups
  user: name=ionadmin append=yes groups=ionian,www-data

# Add www-data user to the ionian group
- name: Add www-data user to the ionian group
  user: name=www-data append=yes groups=ionian

#-----------------------------------------------------------------------------
#    set_logfile_size_limit
#-----------------------------------------------------------------------------
- name: Set logfile size limit
  lineinfile: dest=/etc/logrotate.conf
                state=present
                regexp='# Torrent Server maximum log file limit'
                line='# Torrent Server maximum log file limit'
                insertbefore=BOF
                mode=0644
                
- name: Set logfile size limit
  lineinfile: dest=/etc/logrotate.conf
                state=present
                regexp='^size.*'
                line='size 100M'
                insertafter='# Torrent Server maximum log file limit'
                mode=0644

#-----------------------------------------------------------------------------
# Remove motd regarding available OS upgrade: do not want TS customers to do this.
#-----------------------------------------------------------------------------
- name: Remove message regarding available OS upgrade
  file: dest=/etc/update-motd.d/91-release-upgrade state=absent

#-----------------------------------------------------------------------------
# Disable checking for updates
#-----------------------------------------------------------------------------
- name: disable checking for updates
  lineinfile: dest=/etc/update-manager/release-upgrades
                state=present
                regexp='^[Pp]rompt=.*'
                line='prompt=never'

#-----------------------------------------------------------------------------
# Configure tmpreaper package to purge old files from /tmp directory
#-----------------------------------------------------------------------------
- name: Configure tmpreaper
  lineinfile: dest=/etc/tmpreaper.conf state=present
                regexp='^SHOWWARNING=true'
                line='#SHOWWARNING=true'
- name: Configure tmpreaper
  lineinfile: dest=/etc/tmpreaper.conf state=present
                regexp='^.*TMPREAPER_TIME=.*'
                line='TMPREAPER_TIME=7d'

#-----------------------------------------------------------------------------
# Configure maximum number of open file descriptors allowed
#-----------------------------------------------------------------------------
- name: Set soft limit
  lineinfile: dest={{ security_limits_file }} state=present backrefs=yes
                regexp='(\*.*soft.*nofile).*'
                line='\1          {{ MAX_FILES_OPEN }}'
                insertbefore='# End of file'

- name: Set hard limit
  lineinfile: dest={{ security_limits_file }} state=present backrefs=yes
                regexp='(\*.*hard.*nofile).*'
                line='\1          {{ MAX_FILES_OPEN }}'
                insertbefore='# End of file'

- name: Set soft limit
  lineinfile: dest={{ security_limits_file }} state=present backrefs=yes
                regexp='(^root.*soft.*nofile).*'
                line='\1          {{ MAX_FILES_OPEN }}'
                insertbefore='# End of file'

- name: Set hard limit
  lineinfile: dest={{ security_limits_file }} state=present backrefs=yes
                regexp='(^root.*hard.*nofile).*'
                line='\1          {{ MAX_FILES_OPEN }}'
                insertbefore='# End of file'

#-----------------------------------------------------------------------------
# Create/update the tsconf.log file
#-----------------------------------------------------------------------------
- name: Get version of ion-tsconfig
  shell: dpkg -l ion-tsconfig | tail -1 | awk '{print $3}'
  register: tsconfig_version
  
- name: Assures /etc/torrentserver dir exists
  file: path=/etc/torrentserver state=directory mode=0755 owner=root group=root
  
- name: Create/Update tsconf.log
  template: src=tsconf.conf.j2 dest=/etc/torrentserver/tsconf.conf mode=0644 owner=root group=root
  