#!/usr/bin/python
# Copyright (C) 2015 Ion Torrent Systems, Inc. All Rights Reserved
# Ansible module

DOCUMENTATION = '''
---
module: cidr
short_description: Determines mask bit from netmask
description:
     - The cidr module will takes the command name followed by a single argument, netmask.
     - The value for netmask is used in a lookup table to determine the mask bit value (1-32)
options:
  netmask:
    description:
      - a netmask value (example: 255.255.255.0)
    required: true
    default: null
notes:
    - 
author: 
    - Bernard Puc
'''

EXAMPLES = '''
- name: Determine CIDR from network netmask
  cidr: netmask={{ansible_default_ipv4.netmask}}
  register: cidr_response
'''

# Lookup table of netmask values and the corresponding CIDR mask bit.
maskbits = (
    ("128.0.0.0", 1),
    ("192.0.0.0", 2),
    ("224.0.0.0", 3),
    ("240.0.0.0", 4),
    ("248.0.0.0", 5),
    ("252.0.0.0", 6),
    ("254.0.0.0", 7),
    ("255.0.0.0", 8),
    ("255.128.0.0", 9),
    ("255.192.0.0", 10),
    ("255.224.0.0", 11),
    ("255.240.0.0", 12),
    ("255.248.0.0", 13),
    ("255.252.0.0", 14),
    ("255.254.0.0", 15),
    ("255.255.0.0", 16),
    ("255.255.128.0", 17),
    ("255.255.192.0", 18),
    ("255.255.224.0", 19),
    ("255.255.240.0", 20),
    ("255.255.248.0", 21),
    ("255.255.252.0", 22),
    ("255.255.254.0", 23),
    ("255.255.255.0", 24),
    ("255.255.255.128", 25),
    ("255.255.255.192", 26),
    ("255.255.255.224", 27),
    ("255.255.255.240", 28),
    ("255.255.255.248", 29),
    ("255.255.255.252", 30),
    ("255.255.255.254", 31),
    ("255.255.255.255", 32),
    )


def main():
    module = AnsibleModule(
        argument_spec=dict(
            netmask=dict(required=True, type='str')
        ),
        supports_check_mode=True,
    )

    if module.check_mode:
        module.exit_json(changed=False)
        
    p = module.params
    retvals = {}
    for (netmask, maskbit) in maskbits:
        if p['netmask'] == netmask:
            retvals['changed'] = False
            retvals['netmask'] = netmask
            retvals['maskbit'] = maskbit
            module.exit_json(**retvals)

    module.fail_json(msg="invalid netmask %s" % p['netmask'])

# import module snippets
from ansible.module_utils.basic import *

if __name__ == "__main__":
    main()
