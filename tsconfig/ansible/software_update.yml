---
# file: software_update.yml
- hosts: iontorrent_master
  vars_files:
    - [ "group_vars/all_local", "group_vars/all" ]
  tasks:
    - name:
      include: globals.yml
      
    # Ensure Ion system daemons are stopped
    - name: Ion Daemons shutting down...
      service: name={{ item }} state=stopped
      with_items:
        - ionCrawler
        - ionJobServer
        - ionPlugin
        - celerybeat
        - celeryd
      ignore_errors: Yes
      
    - name: apt-get update
      apt: update_cache=yes
        
    - name: apt-get autoclean
      shell: bash -c 'apt-get autoclean'

    - name: Set package preseed values
      script: 'files/grub-pc.preseed \"{{GRUB_BOOT_DEVICE}}\" '
      when: GRUB_BOOT_DEVICE is defined
    
    # Make a backup of the postgres database.  Pkg ion-dbreports typically makes
    # schema changes during installation so we want a backup.
    - name: Backup postgres database
      script: files/postgres_bckup.sh

    # Check for new entries in the common_syspkg_list and ionmaster_ionpkg_list.
    # This will only install packages not currently installed
    - name: Install common system packages
      apt: name={{item}} state=latest force=yes
      with_items: common_syspkg_list
      when: "'{{ item }}' != '' and ansible_distribution == 'Ubuntu'"
    - name: Install system packages for head node
      apt: name={{ item }} state=latest force=yes
      with_items: ionmaster_syspkg_list
      when: "'{{ item }}' != '' and ansible_distribution == 'Ubuntu'"
    - name: Install Ion packages for head node
      apt: name={{ item }} state=latest force=yes
      with_items: ionmaster_ionpkg_list
      when: "'{{ item }}' != '' and ansible_distribution == 'Ubuntu'"
  
    # This updates all packages available via apt repository settings.  System and Ion packages
    - shell: bash -c 'DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confnew" --force-yes -fuy upgrade'
      register: foobar
       
    - debug: var=foobar.stdout_lines
      
    - name: configuration error fixing.
      include: fixes.yml
      
    # Ensure Ion system daemons are started
    - name: Ion Daemons starting up...
      service: name={{ item }} state=started
      with_items:
        - celeryd
        - celerybeat
        - ionCrawler
        - ionJobServer
        - ionPlugin
      ignore_errors: Yes
        
    #-----------------------------------------------------------------------------
    # Create/update the tsconf.log file
    #-----------------------------------------------------------------------------
    - name: Get version of ion-tsconfig
      shell: dpkg -l ion-tsconfig | tail -1 | awk '{print $3}'
      register: tsconfig_version
      
    - name: Create/Update tsconf.log
      template: src=templates/tsconf.conf.j2 dest=/etc/torrentserver/tsconf.conf mode=0644 owner=root group=root

- hosts: iontorrent_computes
  tasks:
    #-----------------------------------------------------------------------------
    # On each compute node, we need to replicate the Ion Repository configured
    # on the head node.
    #-----------------------------------------------------------------------------
    - name: Replicating head node's /etc/apt/source.list.d/
      copy: src={{item}} dest=/etc/apt/sources.list.d/ mode=0644
      with_fileglob:
        - /etc/apt/sources.list.d/*

    - name: apt-get update
      apt: update_cache=yes
      
    - name: apt-get autoclean
      shell: bash -c 'apt-get autoclean'

    # Check for new entries in the common_syspkg_list and ionmaster_ionpkg_list.
    # This will only install packages not currently installed
    - name: Install common system packages
      apt: name={{item}} state=latest force=yes
      with_items: common_syspkg_list
      when: "'{{ item }}' != '' and ansible_distribution == 'Ubuntu'"
    - name: Install system packages for compute resource - apt
      apt: name={{ item }} state=latest force=yes
      with_items: ioncompute_syspkg_list
      when: "'{{ item }}' != '' and ansible_distribution == 'Ubuntu'"
    - name: Install Ion packages for compute resource - apt
      apt: name={{ item }} state=latest force=yes
      with_items: ioncompute_ionpkg_list
      when: "'{{ item }}' != '' and ansible_distribution == 'Ubuntu'"
      
    # Install all available updates to installed packages
    - shell: bash -c 'DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confnew" --force-yes -fuy upgrade'
      register: foobar
      
    - debug: var=foobar.stdout_lines
      
    - include: roles/iontorrent_computes/tasks/software_update.yml

